# spec: https://semantic-release.gitbook.io/semantic-release/usage/configuration
tagFormat: "${version}"
branches: [main, next]
plugins:
  # Determine the type of release by analyzing commits.
  # ie: Major, Minor or Patch
  - - "@semantic-release/commit-analyzer"
    - preset: conventionalcommits
      releaseRules:
        - { breaking: true, release: major }
        - { revert: true, release: patch }
        - { type: feat, release: minor }
        - { type: fix, release: patch }
        - { type: perf, release: patch }
        - { type: docs, release: patch }
        - { type: refactor, release: patch }
        - { type: style, release: patch }
        - { type: build, release: patch }
        - { type: ci, release: patch }
        - { type: test, release: patch }
        - { type: update, release: patch }
  - - "@semantic-release/release-notes-generator"
    - preset: conventionalcommits
      presetConfig:
        # spec: https://github.com/conventional-changelog/conventional-changelog-config-spec/tree/master/versions/2.1.0
        types:
          - { type: feat, section: "Features" }
          - { type: new, section: "Features" }
          - { type: fix, section: "Bug Fixes" }
          - { type: chore, section: "Misc" }
          - { type: doc, section: "Documentation" }
          - { type: docs, section: "Documentation" }
          - { type: style, section: "Improvements" }
          - { type: refactor, section: "Improvements" }
          - { type: perf, section: "Improvements" }
          - { type: test, section: "Automation" }
          - { type: tests, section: "Automation" }
          - { type: ci, section: "Automation" }
          - { type: CI, section: "Automation" }
  - "@semantic-release/changelog"
  - "@semantic-release/gitlab"
  - "semantic-release-pypi"

  - - "@semantic-release/git"
    - assets: [ CHANGELOG.md, setup.cfg ]
      message: "chore(release): Release ${nextRelease.version} update changelog [skip ci]\n\n${nextRelease.notes}"
